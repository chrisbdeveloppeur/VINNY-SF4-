<label class="label column is-centered has-background-black" style="position: relative" >

    <div style="opacity:.1;height: 100%;width: 100%;z-index:0;position:absolute;top: 0;left:0;background: center / 100% 100vw repeat url({{ asset('build/images/audio_wave.9a42a784.svg') }})"></div>

    <h2 class="columns has-text-white" style=" z-index: 1;justify-content: center">

        <p class=" has-icons-left is-family-code" style="padding: 10px; margin-bottom: 0;color: white;text-shadow: rgb(0, 40, 255) 0px 0px 15px;">

            <span class="icon is-small text-info" style="margin:0 7px">
                <i class="fas fa-headphones"></i>
            </span>

            ORIGINAL <strong class="has-text-white">BEATS</strong>

        </p>

    </h2>

</label>


{% for beat in beat %}
    {% set i = ( i | default(0) ) + 1 %}

{% if beat.iframe is null %}

    <div class="filterDiv {{ beat.genre }}" style="margin-bottom: 10px;position: relative">

        <div class="column is-hidden-desktop"  style="padding: 0; position: absolute;width: 100%;height: 100%;background:center / 250px 250px no-repeat
                {% if beat.beatimagename %}url({{ vich_uploader_asset(beat, 'beatImage') | imagine_filter('normal_size') }})
                {% else %}url({{ asset('build/images/logo_vinny_letra_2.620e7de0.png') }})
                {% endif %};">
            <div style="background: rgba(0,0,0,0.6);height: 100%;width: 100%">
            </div>
        </div>

        <div class="column" style="position: relative">

            <div class="columns has-text-centered align-items-center" style="background: rgba(0,0,0,.7)">

                <div class="is-hidden-touch">
                    <div class="column is-flex is-centered is-vcentered justify-content-center align-items-center">
                        {% if beat.beatimagename %}
                            <img height="110px" width="110px" src="{{ vich_uploader_asset(beat, 'beatImage') | imagine_filter('normal_size') }}" alt="Illustration" style="border-radius:3px;box-shadow: 0px 0px 5px 5px rgba(0,0,0,0.1); background: rgba(255,255,255,0.1)">
                        {% else %}
                            <img height="110px" width="110px" src="{{ asset('build/images/logo_vinny_letra_2.620e7de0.png') }}" alt="Illustration" style="height: 110px;width: 100px;border-radius:3px;box-shadow: 0px 0px 5px 5px rgba(0,0,0,0.1); background: rgba(255,255,255,0.1)">
                        {% endif %}
                    </div>
                </div>

                    <div class="column">

                        <div class="columns is-centered is-vcentered has-text-centered" style=" color: white;margin: 0;padding:0;height:50%">

                            <div class="column" id="track-title{{ i }}">
                                <label for="titre" style="margin: auto"><strong class="has-text-white">Title : </strong></label>
                                {% if beat.titre %}
                                    {{ beat.titre }}
                                {% else %}
                                    N/C
                                {% endif %}
                            </div>

                            <div class="column">
                                <label for="artiste" style="margin: auto"><strong class="has-text-white">Prod. by : </strong></label>
                                {% if beat.artiste %}
                                    {{ beat.artiste }}
                                {% else %}
                                    Vinny Vixi
                                {% endif %}
                            </div>

                            <div class="column">
                                <label for="bpm" style="margin: auto"><strong class="has-text-white">BPM : </strong></label>
                                {% if beat.bpm %}
                                    {{ beat.bpm }}
                                {% else %}
                                    N/C
                                {% endif %}
                            </div>

                            <div class="column">
                                <label for="genre" style="margin: auto"><strong class="has-text-white">Genre : </strong></label>
                                {% if beat.genre %}
                                    {{ beat.genre }}
                                {% else %}
                                    N/C
                                {% endif %}
                            </div>

                            {% if date(beat.updatedat) > date('-15days') %}
                                <span id="newAnimation" class="tag has-text-black-bis has-text-weight-bold is-hidden-touch">New!</span>
                                <span id="newAnimationTouch" class="tag has-text-black-bis has-text-weight-bold is-hidden-desktop">New!</span>
                            {% endif %}

                            <div class="is-flex is-centered is-vcentered justify-content-center">

                                <button type="button" class="btn btn-primary showModal" data-toggle="modal" data-target=".bd-example-modal-lg" style="background: rgba(0,0,0,0);box-shadow: none;border: none">
                                    <i class="fas fa-comment-dollar is-size-3" title="Licenses" style="color: white;text-shadow: rgb(0, 63, 255) 0px 0px 10px;"></i>
                                </button>

                            </div>

                        </div>

                            <audio controls controlsList="nodownload" preload="metadata" id="audio-{{ i }}" class="js-plyr beatFormBeatList columns is-centered align-items-end has-text-centered"
                                   style="width: 100%;
                                   height: 50%;
                                   --plyr-color-main:rgba(0,0,0,0);
                                   --plyr-audio-controls-background:rgba(0,0,0,0);
                                   --plyr-range-thumb-background:rgb(255,255,255);
                                   --plyr-audio-range-thumb-active-shadow-color:rgba(48,170,228,0.4);
                                   --plyr-range-fill-background:rgba(48,170,228,1);
                                   --plyr-audio-control-color:white;
                                   --plyr-audio-control-color-hover:rgba(48,170,228,1);
                                   --plyr-line-height:1;
                                ">

                                <source class="audio" src="{{ vich_uploader_asset(beat, 'beatFile') }}" type="audio/mp3" />
                                <source class="audio" src="{{ vich_uploader_asset(beat, 'beatFile') }}" type="audio/ogg" />
                            </audio>

{#                        <div class="is-flex justify-content-center align-items-center is-hidden-touch" style="position: absolute;right: 0;bottom: 0">#}

{#                            <a href="https://vinnyvixi.com/beats"#}
{#                               class="twitter-share-button"#}
{#                               data-size="small"#}
{#                               data-lang="en"#}
{#                               data-text="Check the beat '{{ beat.titre }}' on "#}
{#                               data-hashtags="Beats,Rap,Drill,Grime,Vinnyvixi,Beatmaker "#}
{#                            >#}
{#                               Tweet this beat !#}
{#                            </a>#}

{#                        </div>#}

{#                        <div class="is-flex justify-content-center align-items-center is-hidden-desktop" style="position: absolute;right: 0;bottom: 0">#}

{#                            <a href="https://vinnyvixi.com/beats"#}
{#                               class="twitter-share-button"#}
{#                               data-size="large"#}
{#                               data-lang="en"#}
{#                               data-text="Check the beat '{{ beat.titre }}' on "#}
{#                               data-hashtags="Beats,Rap,Drill,Grime,Vinnyvixi, Beat-maker "#}
{#                            >#}
{#                                Tweet this beat !#}
{#                            </a>#}

{#                        </div>#}

                    </div>

            </div>

        </div>

    </div>


{% endif %}

    {#  SCRIPT POUR PLAYER AUDIO HEADER   #}
    <script>

        let audio{{ i }} = document.getElementById("audio-{{ i }}");
        let trackTitle{{ i }} = document.getElementById("track-title{{ i }}");
        let trackTitlePlayer{{ i }} = document.querySelector("#track-title");
        let barTime{{ i }} = document.querySelector("#timeLine");
        let barCurrentTime{{ i }} = document.querySelector("#currentTime");
        let cursor{{ i }} = document.querySelector("#cursor");
        let currentTrackTime{{ i }} = document.querySelector("#current-time");
        let trackTime{{ i }} = document.querySelector("#track-time");
        let canvas{{ i }} = document.getElementById("canvas");


        audio{{ i }}.addEventListener('play', function () {
            trackTitlePlayer{{ i }}.innerHTML = trackTitle{{ i }}.innerText;
            barProgessTime(audio{{ i }});
            // deployPlayerOn();
            visualizerCanvas(audio{{ i }});
            canvas{{ i }}.style.display = "initial"
        });

        {#audio{{ i }}.addEventListener('pause', function () {#}
        {#    canvas{{ i }}.style.display = "none"#}
        {#});#}




        //////////////////////////////////////////////////////////////////////////
        ///////////////         BARE DE TEMPS PLAYER          ////////////////////
        //////////////////////////////////////////////////////////////////////////
        function barProgessTime(audio)
        {

            audio.addEventListener('timeupdate', (event) =>
            {
                // console.log(audio.currentTime.toString());
                {#currentTrackTime{{ i }}.innerHTML = audio.currentTime.toString();#}
                {#trackTime{{ i }}.innerHTML = audio.duration.toString();#}
                barCurrentTime{{ i }}.style.width = audio.currentTime / (audio.duration / 100) + "%";
                cursor.style.left = audio.currentTime / (audio.duration / 100) + "%";
            });
        }
        //////////////////////////////////////////////////////////////////////////
        //////////////////////////         FIN          //////////////////////////
        //////////////////////////////////////////////////////////////////////////





        //////////////////////////////////////////////////////////////////////////
        ///////////////         CANVAS VUSIAL          ///////////////////////////
        //////////////////////////////////////////////////////////////////////////
        function visualizerCanvas(audio) {
                var context = new AudioContext();
                var src = context.createMediaElementSource(audio);
                var analyser = context.createAnalyser();
                canvas.width = window.innerWidth;
                canvas.height = window.innerHeight * 0.3 ;
                var ctx = canvas.getContext("2d");

                src.connect(analyser);
                analyser.connect(context.destination);

                analyser.fftSize = 512;

                var bufferLength = analyser.frequencyBinCount;

                var dataArray = new Uint8Array(bufferLength);

                var WIDTH = canvas.width;
                var HEIGHT = canvas.height;

                var barWidth = (WIDTH / bufferLength) * 2;
                var barHeight;
                var x = 0;

                function renderFrame() {
                    requestAnimationFrame(renderFrame);

                    x = 0;

                    analyser.getByteFrequencyData(dataArray);

                    ctx.fillStyle = "#121212";
                    ctx.strokeStyle = "black";
                    ctx.globalAlpha = 1;
                    ctx.lineCap = "round";
                    ctx.fillRect(0, 0, WIDTH, HEIGHT);

                    for (var i = 0; i < bufferLength; i++) {
                        barHeight = dataArray[i];

                        var r = 0;
                        var g = barHeight;
                        var b = 255;

                        ctx.fillStyle = "rgb(" + r + "," + g + "," + b + ")";
                        ctx.lineCap = "round";
                        ctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);

                        x += barWidth + 1;
                    }
                }

                renderFrame();

        }
        //////////////////////////////////////////////////////////////////////////
        ///////////////        FIN CANVAS VUSIAL          ////////////////////////
        //////////////////////////////////////////////////////////////////////////






    </script>
    {#  FIN SCRIPT POUR PLAYER AUDIO HEADER   #}

{% endfor %}














